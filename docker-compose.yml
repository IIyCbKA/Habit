version: '3.8'

services:
  db:
    image: postgres:15
    restart: unless-stopped
    env_file:
      - server/.env
    volumes:
      - postgres_data:/var/lib/postgresql/data:rw
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  server:
    image: denistred/habit_server:latest
    restart: unless-stopped
    env_file:
      - server/.env
    networks:
      - backend
      - frontend
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  client:
    image: denistred/habit_client:latest
    restart: unless-stopped
    env_file:
      - client/.env
    networks:
      - frontend
    depends_on:
      server:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget --spider --quiet http://localhost:3000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:stable-alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/etc/nginx/certs:ro
    networks:
      - backend
      - frontend
    depends_on:
      server:
        condition: service_healthy
      client:
        condition: service_healthy

volumes:
  postgres_data:

networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge
